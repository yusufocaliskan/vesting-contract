{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x4cAac1C7B11CA4E7CEa583c08cE0ce025f81C369",
      "txHash": "0xae6975584129ee145867c90f22a571d9a99ad622749569e4cef8f1e588d5ea28",
      "kind": "uups"
    },
    {
      "address": "0xc4680fA0C3Fd25ae158B9D27Dc77CDd1d9E058e6",
      "txHash": "0x18632d607f8053aedb600a9db90a886ad1530e5b620cdd75ea5fd4b623d9f15f",
      "kind": "uups"
    },
    {
      "address": "0x6155b8161a205E1e08842A132B3285bC687570E2",
      "txHash": "0xdc5ffae8325a80ff442e467e66db952046f65aa4b017fb6af2e04f5f489c0aaa",
      "kind": "uups"
    }
  ],
  "impls": {
    "97772394e06ca641a71201652752b6a0636cc2d94a55c4401b5ed14d2603d854": {
      "address": "0xA68d4cAB15EE52f9b505524Fa3C204B84500a6E1",
      "txHash": "0x30c606d6f61979dee33ae5508d37eef2ecf35737acfe29371b2147a18ba74c65",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "version",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage",
            "contract": "GptVerseStake",
            "src": "contracts/GptVerseStake.sol:14"
          },
          {
            "label": "_totalPools",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "GptVerseStake",
            "src": "contracts/GptVerseStake.sol:30"
          },
          {
            "label": "_allStakePools",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "GptVerseStake",
            "src": "contracts/GptVerseStake.sol:33"
          },
          {
            "label": "_allStakePoolIds",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "GptVerseStake",
            "src": "contracts/GptVerseStake.sol:34"
          },
          {
            "label": "_stakePool",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_string_memory_ptr,t_struct(StakePools)1853_storage)",
            "contract": "GptVerseStake",
            "src": "contracts/GptVerseStake.sol:38"
          },
          {
            "label": "idCounter",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "GptVerseStake",
            "src": "contracts/GptVerseStake.sol:54"
          },
          {
            "label": "_stakes",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_mapping(t_uint256,t_struct(Stakes)1883_storage)))",
            "contract": "GptVerseStake",
            "src": "contracts/GptVerseStake.sol:56"
          },
          {
            "label": "_allStakeIds",
            "offset": 0,
            "slot": "7",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "GptVerseStake",
            "src": "contracts/GptVerseStake.sol:58"
          },
          {
            "label": "_userPoolStakeIds",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "contract": "GptVerseStake",
            "src": "contracts/GptVerseStake.sol:60"
          },
          {
            "label": "_stakesInPool",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_string_memory_ptr,t_array(t_struct(Stakes)1883_storage)dyn_storage)",
            "contract": "GptVerseStake",
            "src": "contracts/GptVerseStake.sol:62"
          },
          {
            "label": "_totalUsers",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256",
            "contract": "GptVerseStake",
            "src": "contracts/GptVerseStake.sol:72"
          },
          {
            "label": "_allUserIds",
            "offset": 0,
            "slot": "11",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "GptVerseStake",
            "src": "contracts/GptVerseStake.sol:73"
          },
          {
            "label": "_users",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(User)1917_storage))",
            "contract": "GptVerseStake",
            "src": "contracts/GptVerseStake.sol:77"
          },
          {
            "label": "_token",
            "offset": 0,
            "slot": "13",
            "type": "t_contract(IERC20)1354",
            "contract": "GptVerseStake",
            "src": "contracts/GptVerseStake.sol:79"
          },
          {
            "label": "_tokenAddress",
            "offset": 0,
            "slot": "14",
            "type": "t_address",
            "contract": "GptVerseStake",
            "src": "contracts/GptVerseStake.sol:82"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)65_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)195_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Stakes)1883_storage)dyn_storage": {
            "label": "struct GptVerseStake.Stakes[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)1354": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Stakes)1883_storage))": {
            "label": "mapping(address => mapping(uint256 => struct GptVerseStake.Stakes))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(User)1917_storage)": {
            "label": "mapping(address => struct GptVerseStake.User)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_array(t_struct(Stakes)1883_storage)dyn_storage)": {
            "label": "mapping(string => struct GptVerseStake.Stakes[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(string => mapping(address => uint256[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_mapping(t_uint256,t_struct(Stakes)1883_storage)))": {
            "label": "mapping(string => mapping(address => mapping(uint256 => struct GptVerseStake.Stakes)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(User)1917_storage))": {
            "label": "mapping(string => mapping(address => struct GptVerseStake.User))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(StakePools)1853_storage)": {
            "label": "mapping(string => struct GptVerseStake.StakePools)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Stakes)1883_storage)": {
            "label": "mapping(uint256 => struct GptVerseStake.Stakes)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(StakePools)1853_storage": {
            "label": "struct GptVerseStake.StakePools",
            "members": [
              {
                "label": "stakePoolId",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "startDate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "endDate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "apy",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "poolTotalStakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "isPaused",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "minStakingAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "maxStakingLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "isDeleted",
                "type": "t_bool",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(Stakes)1883_storage": {
            "label": "struct GptVerseStake.Stakes",
            "members": [
              {
                "label": "stakePoolId",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "stakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "startDate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastStakeRewardTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "stakeAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "stakeReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "totalReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "userAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_struct(User)1917_storage": {
            "label": "struct GptVerseStake.User",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalStakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "totalClaimedRewards",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
